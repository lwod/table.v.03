{"version":3,"sources":["logo.svg","components/LocationMarker.js","components/LocationInfoBox.js","components/Map.js","App.js","reportWebVitals.js","index.js"],"names":["LocationMarker","lat","lng","iconType","onClick","onMouseOver","onMouseOut","useState","castle","icon","setIcon","useEffect","className","LocationInfoBox","info","style","display","visible","Map","center","zoom","locationInfo","setLocationInfo","bootstrapURLKeys","key","defaultCenter","defaultZoom","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAe,I,yCCwBAA,EApBQ,SAAC,GAIlB,EAJmBC,IAInB,EAJwBC,IAIvB,IAJ4BC,EAI7B,EAJ6BA,SACVC,EAGnB,EAHmBA,QACAC,EAEnB,EAFmBA,YACAC,EACnB,EADmBA,WACnB,EAEmBC,mBAASC,KAF5B,mBAEEC,EAFF,KAEQC,EAFR,KASL,OANAC,qBAAU,WACT,OAAQR,GACP,IAAK,SAAWO,EAAQF,QAEvB,CAACL,IAGH,qBAAKS,UAAW,kBAAmBR,QAASA,EAASC,YAAaA,EAAaC,WAAYA,EAA3F,SACC,cAAC,OAAD,CAAMG,KAAQA,EAAMG,UAAY,qBCTpBC,EAVS,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACzB,OACC,qBAAKC,MAAO,CAACC,QAAQ,GAAD,OAAIF,EAAKG,UAA7B,SACC,qBAAKL,UAAW,gBAAhB,SACC,8BAAME,EAAKA,YCCTI,EAAM,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,KAAU,EAESb,mBAAS,MAFlB,mBAExBc,EAFwB,KAEVC,EAFU,KAI/B,OACC,sBAAKV,UAAW,MAAhB,UACC,cAAC,IAAD,CACCW,iBAAkB,CAACC,IAAI,2CACvBC,cAAeN,EACfO,YAAaN,EAHd,SAKC,cAAC,EAAD,CACCnB,IAAK,WACLC,KAAM,WACNC,SAAU,SACVC,QAAS,aACTC,YAAa,WACZiB,EAAgB,CACfR,KAAK,uVACLG,QAAQ,WAGVX,WAAY,WACXgB,EAAgB,CACfR,KAAK,uVACLG,QAAQ,cAMXI,GAAgB,cAAC,EAAD,CAAiBP,KAAMO,QAK3CH,EAAIS,aAAe,CAClBR,OAAQ,CACPlB,IAAK,WACLC,KAAM,WAEPkB,KAAM,IAGQF,QCpCAU,MARf,WACE,OACE,qBAAKhB,UAAU,MAAf,SACE,cAAC,EAAD,OCISiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dcc49cdd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useEffect, useState} from 'react'\r\nimport {Icon} from '@iconify/react'\r\nimport castle from '@iconify-icons/emojione-monotone/castle'\r\n\r\nconst LocationMarker = ({lat, lng, iconType,\r\n\t                        onClick,\r\n\t                        onMouseOver,\r\n\t                        onMouseOut\r\n}) => {\r\n\t\r\n\tconst [icon, setIcon] = useState(castle)\r\n\tuseEffect(()=>{\r\n\t\tswitch (iconType){\r\n\t\t\tcase 'castle' : setIcon(castle); break;\r\n\t\t}\r\n\t}, [iconType])\r\n\t\r\n\treturn(\r\n\t\t<div className={'location-marker'} onClick={onClick} onMouseOver={onMouseOver} onMouseOut={onMouseOut}>\r\n\t\t\t<Icon icon = {icon} className = \"location-icon\"/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default LocationMarker\r\n","const LocationInfoBox = ({info}) => {\r\n\treturn (\r\n\t\t<div style={{display:`${info.visible}`}}>\r\n\t\t\t<div className={'location-info'}>\r\n\t\t\t\t<div>{info.info}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default LocationInfoBox;\r\n","import React, {useState} from 'react'\r\nimport GoogleMap from 'google-map-react'\r\nimport LocationMarker from \"./LocationMarker\";\r\nimport LocationInfoBox from \"./LocationInfoBox\";\r\n\r\nconst Map = ({center, zoom}) => {\r\n\t\r\n\tconst [locationInfo, setLocationInfo] = useState(null)\r\n\t\r\n\treturn(\r\n\t\t<div className={'map'}>\r\n\t\t\t<GoogleMap\r\n\t\t\t\tbootstrapURLKeys={{key:'AIzaSyBdDXrVbMRNQ67za2Ci2P_MYDX1OCy7LXE'}}\r\n\t\t\t\tdefaultCenter={center}\r\n\t\t\t\tdefaultZoom={zoom}\r\n\t\t\t>\r\n\t\t\t\t<LocationMarker\r\n\t\t\t\t\tlat={41.5992389}\r\n\t\t\t\t\tlng={-87.3323191}\r\n\t\t\t\t\ticonType={'castle'}\r\n\t\t\t\t\tonClick={()=>{}}\r\n\t\t\t\t\tonMouseOver={()=>{\r\n\t\t\t\t\t\tsetLocationInfo({\r\n\t\t\t\t\t\t\tinfo:\"Поместье князя Модеуса\\nПрием прошел успешно\\nСобрать фото города\",\r\n\t\t\t\t\t\t\tvisible:'block'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonMouseOut={()=>{\r\n\t\t\t\t\t\tsetLocationInfo({\r\n\t\t\t\t\t\t\tinfo:\"Поместье князя Модеуса\\nПрием прошел успешно\\nСобрать фото города\",\r\n\t\t\t\t\t\t\tvisible:'none'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t\r\n\t\t\t\t/>\r\n\t\t\t</GoogleMap>\r\n\t\t\t{locationInfo && <LocationInfoBox info={locationInfo}/>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nMap.defaultProps = {\r\n\tcenter: {\r\n\t\tlat: 41.6000514,\r\n\t\tlng: -87.337515,\r\n\t},\r\n\tzoom: 15\r\n}\r\n\r\nexport default Map\r\n","import React from \"react\"\nimport logo from './logo.svg';\nimport './App.css';\nimport Map from \"./components/Map\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Map/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}