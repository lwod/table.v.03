{"version":3,"sources":["components/Map/Map.js","App.js","index.js"],"names":["host","domain","window","location","href","includes","socket","io","connect","transports","Map","useState","lat","lng","marker","setMarker","key","center","zoom","map","className","bootstrapURLKeys","defaultCenter","defaultZoom","onClick","event","emit","on","console","log","style","width","height","backgroundColor","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OASMA,EAAO,CAACC,OAAQ,IAClBC,OAAOC,SAASC,KAAKC,SAAS,aACjCL,EAAKC,OAAS,wBAEdD,EAAKC,OAAS,8BAGf,IAAMK,EAASC,IAAGC,QAAQR,EAAKC,OAAQ,CAACQ,WAAY,CAAC,eA2FtCC,EAxFH,WAAM,MA2BWC,mBAAS,CACpCC,IAAK,QACLC,KAAM,WA7BU,mBA2BVC,EA3BU,KA2BFC,EA3BE,OAiCKJ,mBAAS,CAC9BK,IAAK,0CACLC,OAAQ,CACPL,IAAK,QACLC,KAAM,UAEPK,KAAM,KAvCU,mBAiCVC,EAjCU,UA6DjB,OACC,qBAAKC,UAAW,MAAhB,SACC,cAAC,IAAD,CACCC,iBAAkB,CAACL,IAAKG,EAAIH,KAC5BM,cAAeH,EAAIF,OACnBM,YAAaJ,EAAID,KACjBM,QAzBkB,SAACC,GACrB,IAAMtB,EAAW,CAChBS,IAAKa,EAAMb,IACXC,IAAKY,EAAMZ,KAGZP,EAAOoB,KAAK,UAAWvB,GAEvBG,EAAOqB,GAAG,aAAa,SAAAxB,GACtBY,EAAUZ,MAEXyB,QAAQC,IAAIJ,IAUX,SAMC,qBAAKL,UAAW,SACXU,MAAO,CACNC,MAAO,OACPC,OAAQ,OACRC,gBAAgB,SAGjBrB,IAAKE,EAAOF,IACZC,IAAKC,EAAOD,WC7DNqB,EAtBH,WAcX,OACC,sBAAKd,UAAW,MAAhB,UACC,cAAC,EAAD,IACA,wBAAQI,QAfW,WACpBI,QAAQC,IAAI,UAcX,2BCvBHM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.33286c87.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport GoogleMapReact from 'google-map-react'\r\nimport './index.css'\r\n// import LocationMarker from \"../LocationMarker/LocationMarker\";\r\n// import {useMap} from \"../../contexts/MapContext\";\r\n// import LocationInfoBox from \"../LocationInfoBox/LocationInfoBox\";\r\n\r\nimport io from 'socket.io-client'\r\n// const socket = io('http://localhost:5000', {transports: ['websocket']});\r\nconst host = {domain: ''}\r\nif (window.location.href.includes('localhost')) {\r\n\thost.domain = 'http://localhost:5000'\r\n} else {\r\n\thost.domain = 'https://lwod.herokuapp.com/'\r\n}\r\n\r\nconst socket = io.connect(host.domain, {transports: ['websocket']})\r\n\r\n\r\nconst Map = () => {\r\n\t\r\n\t// const {trackingEvents} = useMap()\r\n\t//\r\n\t// const [markers, setMarkers] = useState([])\r\n\t//\r\n\t// const [locationInfo, setLocationInfo] = useState(null)\r\n\t//\r\n\t// useEffect(()=>{\r\n\t// \tsetMarkers(\r\n\t// \t\ttrackingEvents.map(trackingEvent => {\r\n\t// \t\t\treturn <LocationMarker\r\n\t// \t\t\t\teventType={trackingEvent.type}\r\n\t// \t\t\t\tlat = {trackingEvent.lat}\r\n\t// \t\t\t\tlng = {trackingEvent.lng}\r\n\t// \t\t\t\tkey = {trackingEvent.id}\r\n\t// \t\t\t\tonClick={()=>{\r\n\t// \t\t\t\t\tsetLocationInfo(trackingEvent)\r\n\t// \t\t\t\t\tconsole.log(trackingEvent)\r\n\t// \t\t\t\t}}\r\n\t//\r\n\t//\r\n\t// \t\t\t/>\r\n\t// \t\t})\r\n\t// \t)\r\n\t// }, [trackingEvents])\r\n\t\r\n\tconst [marker, setMarker] = useState({\r\n\t\tlat: 42.3265,\r\n\t\tlng: -122.8756,\r\n\t})\r\n\t\r\n\t\r\n\tconst [map, setMap] = useState({\r\n\t\tkey: 'AIzaSyBdDXrVbMRNQ67za2Ci2P_MYDX1OCy7LXE',\r\n\t\tcenter: {\r\n\t\t\tlat: 42.3265,\r\n\t\t\tlng: -122.8756,\r\n\t\t},\r\n\t\tzoom: 10,\r\n\t})\r\n\t\r\n\tconst clickHandler = (event) => {\r\n\t\tconst location = {\r\n\t\t\tlat: event.lat,\r\n\t\t\tlng: event.lng\r\n\t\t}\r\n\t\t\r\n\t\tsocket.emit('message', location)\r\n\r\n\t\tsocket.on('setMarker', location=>{\r\n\t\t\tsetMarker(location)\r\n\t\t})\r\n\t\tconsole.log(event)\r\n\t}\r\n\t\r\n\t\r\n\t// useEffect(()=>{\r\n\t//\r\n\t// }, [marker])\r\n\t\r\n\treturn (\r\n\t\t<div className={'map'}>\r\n\t\t\t<GoogleMapReact\r\n\t\t\t\tbootstrapURLKeys={{key: map.key}}\r\n\t\t\t\tdefaultCenter={map.center}\r\n\t\t\t\tdefaultZoom={map.zoom}\r\n\t\t\t\tonClick={clickHandler}\r\n\t\t\t>\r\n\t\t\t\t<div className={'marker'}\r\n\t\t\t\t     style={{\r\n\t\t\t\t\t     width: '15px',\r\n\t\t\t\t\t     height: '15px',\r\n\t\t\t\t\t     backgroundColor:'black'\r\n\t\t\t\t\t\r\n\t\t\t\t     }}\r\n\t\t\t\t     lat={marker.lat}\r\n\t\t\t\t     lng={marker.lng}\r\n\t\t\t\t>\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t{/*{markers}*/}\r\n\t\t\t</GoogleMapReact>\r\n\t\t\t{/*{locationInfo && <LocationInfoBox info={locationInfo}/>}*/}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Map","import Map from \"./components/Map/Map\";\r\n\r\n// import io from 'socket.io-client'\r\n// // const socket = io('http://localhost:5000', {transports: ['websocket']});\r\n// const host = {domain: ''}\r\n// if (window.location.href.includes('localhost')) {\r\n// \thost.domain = 'http://localhost:5000'\r\n// } else {\r\n// \thost.domain = 'https://lwod.herokuapp.com/'\r\n// }\r\n//\r\n// const socket = io.connect(host.domain, {transports: ['websocket']})\r\n\r\nconst App = () => {\r\n\t\r\n\tconst clickHandler = () => {\r\n\t\tconsole.log('click')\r\n\t\tconst name = 'some name';\r\n\t\tconst message = 'some message'\r\n\t\t// socket.emit(\"message\", {name, message})\r\n\t\t// socket.send(JSON.stringify({a:1,b:2}))\r\n\t}\r\n\t\r\n\t// socket.on('message', msg => {\r\n\t// \tconsole.log(msg)\r\n\t// })\r\n\t\r\n\treturn (\r\n\t\t<div className={'div'}>\r\n\t\t\t<Map/>\r\n\t\t\t<button onClick={clickHandler}>Send data</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst str = 'some str'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}